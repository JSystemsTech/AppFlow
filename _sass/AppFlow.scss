.tray-wrapper {
    height: auto;
    position: relative;
}
.tray-wrapper:not(.auto-resize) {
    overflow-y: auto;
}
.tray-wrapper > .app-tray.app-open {
    position: absolute;
}

.app-tray {
  display: flex;
  flex-wrap: wrap;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
}

.app-tray .app-tray {
  padding-left: 0 !important;
  padding-right: 0 !important;
}

.app {
  display: block;
  vertical-align: top;
  float: left;
}

.app:not(.active) {
  border: 1px solid #ccc !important;
}

.app:not(.active).beveled {
  border: 2px outset rgba(255, 255, 255, 0.9) !important;
}

.app:not(.active).beveled > .app-title {
  padding-top: 2px !important;
}

.app:not(.active).app-square {
  border-radius: 0 !important;
}

.app:not(.active),
.app.active .app-close {
  cursor: pointer;
}

.app:not(.active) > .app-header {
  border-radius: inherit;
}
.app:not(.active) > .app-header.app-icon {
  text-align: center;
  vertical-align: bottom;
}

.app-tray {
  width: 100%;
}

.app-tray.app-open {
  min-height: 100%;
}

.app-tray:not(.app-open) {
  overflow: auto;
  justify-content: center;
}

.app-tray.app-open.blured > .app.active {
  position: relative;
}

.app-tray.app-open.blured:before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  background-color: white;
  opacity: 0.7;
  display: block;
  width: 100%;
  height: 100%;
}

.app-tray.app-open.blured.blured-dark:before {
  background-color: black;
  opacity: 0.3;
}

.app-tray:not(.app-open) > .app > .app-title {
  padding-left: 1px;
  padding-right: 1px;
}

.app.active > .app-header,
.app.active > .app-title,
.app:not(.active) > .app-content {
  display: none;
}

.app.active > .app-content {
  width: 100%;
  height: 100%;
}

.app-tray,
.app-tray:before,
.app-tray > .app,
.app-tray > .app > [class^="app-alert"],
.app-tray > .app > .app-header,
.app-tray > .app > .app-content,
.app-tray > .app > .app-title{
  -webkit-transition: 400ms;
  -moz-transition: 400ms;
  -o-transition: 400ms;
  transition: 400ms;
}


.app.active {
  border-radius: 0 !important;
  width: 100%;
  opacity: 1;
}

.app-tray.app-open > .app {
  margin: 0;
}

.app-tray.app-open > .app:not(.active) {
  display: none;
}

.app-tray:not(.app-open) > .app:not(.active) > [class^="app-alert"]{
    position: absolute;
    margin-left: auto;
    margin-right: auto;
}
.app-tray.app-open > .app.active > [class^="app-alert"]{
    display: none;
}
.app-alert,
.app-alert-tr{
    right: -5px;
    top: -5px;
    >*:first-child{
        float: right;
    }
}
.app-alert-tl{
    left: -5px;
    top: -5px;
    >*:first-child{
        float: left;
    }
}
.app-alert-bl{
    left: -5px;
    bottom: -5px;
    >*:first-child{
        float: left;
    }
}
.app-alert-br{
    right: -5px;
    bottom: -5px;
    >*:first-child{
        float: right;
    }
}

$app-span-list: 2 3 4 5;
$app-spacing-list: 10, 15, 20, 25, 30;
$base-font-sizes: 10 11 12 13 14;


$app-size-list: 25 50 75 100 125 150 175 200;
$app-border-radius-list: 6.25 12.5 18.75 25 31.25 37.5 43.75 50;
$glass-border-radius-list: 4.25 10.5 16.75 23 29.25 35.5 41.75 48;
$auto-sizes: 0 260 340 415 768 992 1200 1492;
$class-extension-icon: "xs" "sm" "md" "lg" "xl";


$default-spacing : nth($app-spacing-list, 1);
$default-base-font-size : nth($base-font-sizes, 1);
$default-app-size : nth($app-size-list, 4);
$default-app-border-radius : nth($app-border-radius-list, 4);
$default-glass-border-radius : nth($glass-border-radius-list, 4);
@function get_number($var, $default) {
    @if $var == null {
        @return $default;
    } @else {
        @return $var;
    }
}
@function caluclateWidthHeight($app-size: $default-app-size, $space-size: $default-spacing, $span-size: 1){
    $app-size : get_number($app-size, $default-app-size);
    $space-size : get_number($space-size, $default-spacing);
    $span-size : get_number($span-size, 1);
    
        $gaps-to-fill: $span-size - 1;
        $gap-fill-width: 2 * $space-size * $gaps-to-fill;
        $app-width: $app-size * $span-size;
        @return $gap-fill-width + $app-width;
    
}
.app-tray.app-open[class*="app-open-"]{
    height:100%;

}
.app-tray.app-open[class*="app-open-"] > .app.active{
    margin: auto;
    float: none;
}
.app-tray.app-open[class*="app-open-"].app-shadowed > .app.active,
.app-tray.app-open[class*="app-open-"].blured.app-shadowed > .app.active{
    box-shadow: #333 0 3px 15px 0;
}
.app-tray.app-open[class*="app-open-"].blured.blured-dark.app-shadowed > .app.active{
    box-shadow: #ddd 0 3px 15px 0;
}

@for $i from 50 through 99 {
    .app-tray.app-open.app-open-#{$i} > .app.active{
    width: $i + %;
    height: $i + %;
}
}



//loop app-size
@each $app-size in $app-size-list {
    $a: index($app-size-list, $app-size);
    
    
    $app-border-radius : nth($app-border-radius-list, $a);
    $glass-border-radius : nth($glass-border-radius-list, $a);
    //looped app-size , no app-spacing, no app-span
    
    $length-value : caluclateWidthHeight($app-size, null, null);
        .app-tray:not(.app-open).app-size-#{$a}{
            padding-bottom: ($default-spacing - 5) + (2 * $a) + px;
        }
         .app-tray:not(.app-open).app-size-#{$a} >.app:not(.active) { 
             width: $length-value + px;
             height: $length-value + px;
             min-width: $length-value + px; 
             min-height: $length-value + px; 
             border-radius: $app-border-radius + px;
         }
         .app-tray:not(.app-open).app-size-#{$a} >.app:not(.active) > .app-title {
            font-size: 0.8 + (($a - 1) / 10 ) + em;
         }
         .app-tray:not(.app-open).app-size-#{$a} >.app:not(.active):not(.app-square).glass:after {
                    border-top-left-radius: $glass-border-radius + px;
                    border-top-right-radius: $glass-border-radius + px;
                }
        .app-tray:not(.app-open).app-size-#{$a} >.app:not(.active)> .app-header.app-icon { 
             line-height: $length-value + px;
             font-size: #{$app-size * 0.7} + px;
         }
         @each $ce in $class-extension-icon {
             $scale-by: ((index($class-extension-icon, $ce) - 1 ) / 10);
         .app-tray:not(.app-open).app-size-#{$a} >.app:not(.active)> .app-header.app-icon.app-icon-#{$ce} { 
             line-height: $length-value + px;
             font-size: #{$app-size * (0.5 + $scale-by)} + px;
         }
         }
         
         
           
            
            
         
    //looped app-size , loop app-spacing
    @each $space-size in $app-spacing-list {
        $s: index($app-spacing-list, $space-size);
        .app-tray:not(.app-open).app-size-#{$a}.spacing-#{$s}{
            padding-bottom:  ($space-size - 5) + (2 * $a) + px;
        }
        //looped app-size , looped app-spacing, no app-span
        $length-value : caluclateWidthHeight($app-size, $space-size, null);
         .app-tray:not(.app-open).app-size-#{$a}.spacing-#{$s} >.app:not(.active) { 
             width: $length-value + px;
             height: $length-value + px;
             min-width: $length-value + px; 
             min-height: $length-value + px; 
         }
         .app-tray:not(.app-open).app-size-#{$a}.spacing-#{$s} >.app:not(.active)> .app-header.app-icon { 
             line-height: $length-value + px;
         }
         
         //looped app-size , looped app-spacing, loop app-span
         @each $app-span in $app-span-list{
             //looped app-size , looped app-spacing, looped app-span
            $length-value : caluclateWidthHeight($app-size, $space-size, $app-span);
            .app-tray:not(.app-open).app-size-#{$a}.spacing-#{$s} >.app:not(.active).app-span-#{$app-span} { 
             width: $length-value + px;
             min-width: $length-value + px; 
            }
            .app-tray:not(.app-open).app-size-#{$a}.spacing-#{$s} >.app:not(.active).app-height-span-#{$app-span} { 
             height: $length-value + px;
             min-height: $length-value + px; 
            }
            .app-tray:not(.app-open).app-size-#{$a}.spacing-#{$s} >.app:not(.active).app-height-span-#{$app-span}> .app-header.app-icon { 
             line-height: $length-value + px;
            }
         }
        
    }
    //looped app-size , no app-spacing, loop app-span
    @each $app-span in $app-span-list{
             //looped app-size , no app-spacing, looped app-span
            $length-value : caluclateWidthHeight($app-size, null, $app-span);
            .app-tray:not(.app-open).app-size-#{$a} >.app:not(.active).app-span-#{$app-span} { 
             width: $length-value + px;
             min-width: $length-value + px; 
            }
            .app-tray:not(.app-open).app-size-#{$a} >.app:not(.active).app-height-span-#{$app-span} { 
             height: $length-value + px; 
             min-height: $length-value + px; 
            }
            .app-tray:not(.app-open).app-size-#{$a} >.app:not(.active).app-height-span-#{$app-span}> .app-header.app-icon { 
             line-height: $length-value + px;
            }
         }
}

//loop app-spacing
@each $space-size in $app-spacing-list {
        $s: index($app-spacing-list, $space-size);
        .app-tray.spacing-#{$s}:not(.app-open){
            padding: ($space-size - 5) + px;
            padding-bottom: ($default-spacing - 5 + 8) + px;
            font-size: nth($base-font-sizes, $s) + px;
        }
        
        
        //looped app-spacing, no app-span
        $length-value : caluclateWidthHeight(null, $space-size, null);
         .app-tray:not(.app-open).spacing-#{$s} >.app:not(.active) { 
             width: $length-value + px;
             height: $length-value + px;
             min-width: $length-value + px; 
             min-height: $length-value + px; 
             margin: $space-size + px;
         }
         .app-tray:not(.app-open).spacing-#{$s} >.app:not(.active)>.app-title {
                margin-left: -$space-size + px;
                margin-right: -$space-size + px;
             }
         .app-tray:not(.app-open).spacing-#{$s} >.app:not(.active)>.app-header.app-icon { 
                line-height: $length-value + px;
            }
         
         //looped app-spacing, loop app-span
         @each $app-span in $app-span-list{
             //looped app-spacing, looped app-span
            $length-value : caluclateWidthHeight(null, $space-size, $app-span);
            .app-tray:not(.app-open).spacing-#{$s} >.app:not(.active).app-span-#{$app-span} { 
             width: $length-value + px;
             min-width: $length-value + px; 
            }
            .app-tray:not(.app-open).spacing-#{$s} >.app:not(.active).app-height-span-#{$app-span} { 
             height: $length-value + px;
             min-height: $length-value + px; 
            }
            .app-tray:not(.app-open).spacing-#{$s} >.app:not(.active).app-height-span-#{$app-span}> .app-header.app-icon { 
             line-height: $length-value + px;
            }
         }
        
    }

//loop app-span
@each $app-span in $app-span-list{
     //looped app-span
    $length-value : caluclateWidthHeight(null, null, $app-span);
    .app-tray:not(.app-open) >.app:not(.active).app-span-#{$app-span} { 
     width: $length-value + px;
     min-width: $length-value + px; 
             
    }
    .app-tray:not(.app-open) >.app:not(.active).app-height-span-#{$app-span} { 
     height: $length-value + px;
     min-height: $length-value + px; 
    }
    .app-tray:not(.app-open) >.app:not(.active).app-height-span-#{$app-span}>     .app-header.app-icon { 
     line-height: $length-value + px;
    }
}

//base default settings
    $length-value : caluclateWidthHeight(null, null, null);
    .app-tray:not(.app-open) >.app:not(.active) { 
     width: $length-value + px;
     height: $length-value + px;
     min-width: $length-value + px; 
     min-height: $length-value + px; 
     border-radius:$default-app-border-radius + px;
     position: relative;
     margin: $default-spacing + px;
        
    }
    .app-tray:not(.app-open){
            padding: ($default-spacing - 5) + px;
            padding-bottom: ($default-spacing - 5 + 8) + px;
        }
    .app-tray:not(.app-open) >.app:not(.active)>.app-title {
                padding-top: 1px;
                margin-left: -$default-spacing + px;
                margin-right: -$default-spacing + px;
             }
    .app-tray:not(.app-open) >.app:not(.active).glass:after{
            content: '';
            position: absolute;
            top: 2px;
            left: 2px;
            width: calc(100% - 4px);
            height: 50%;
            background: linear-gradient(rgba(255,255,255,0.8), rgba(255,255,255,0));
        }
    .app-tray:not(.app-open) >.app:not(.active):not(.app-square).glass:after{
                border-top-left-radius: $default-glass-border-radius + px;
                border-top-right-radius: $default-glass-border-radius + px;
            }
    .app-tray:not(.app-open) >.app:not(.active)> .app-header { 
     height:100%;
    }
    .app-tray:not(.app-open) >.app:not(.active)> .app-header.app-icon { 
     line-height: $length-value + px;
     font-size: #{$default-app-size * 0.7} + px;
    }
    .app-tray:not(.app-open) { 
     font-size: $default-base-font-size + px;
    }
    .app-tray:not(.app-open) >.app:not(.active)> .app-title { 
     font-size: 1.1 + em;
    }
    @each $ce in $class-extension-icon {
             $scale-by: ((index($class-extension-icon, $ce) - 1 ) / 10);
         .app-tray:not(.app-open) >.app:not(.active)> .app-header.app-icon.app-icon-#{$ce} { 
             line-height: $length-value + px;
             font-size: #{$default-app-size * (0.5 + $scale-by)} + px;
         }
         }
    
           



@for $min from 1 through 8{
    $class-extention: "-" + #{$min};
    @if($min == 1){
       $class-extention: ""; 
    }
    $auto-sizes-sublist: ();
    @for $next-value from $min through 8{
        
        $auto-sizes-sublist: append($auto-sizes-sublist, nth($auto-sizes, $next-value));
    }
    @each $auto-size in $auto-sizes-sublist {
    $min-val-index: index($auto-sizes-sublist, $auto-size);
    $i: index($auto-sizes, $auto-size);
    $media-min-width: $auto-size;
    @if $min-val-index == 1 {
    $media-min-width: 0
    } 
    @media (min-width: $media-min-width + px){
    $app-size: nth($app-size-list, $i);
      $glass-border-radius : nth($glass-border-radius-list, $i);
    $app-border-radius : nth($app-border-radius-list, $i);
    $length-value : caluclateWidthHeight($app-size, null, null);
        .app-tray:not(.app-open).app-size-auto#{$class-extention} >.app:not(.active){
  width: $length-value + px;
  height: $length-value + px;
  min-width: $length-value + px;
             min-height: $length-value + px; 
             border-radius: $app-border-radius + px;
    }
    .app-tray:not(.app-open).app-size-auto#{$class-extention}{
            padding-bottom:  ($default-spacing - 5) + (2 * $i) + px;
        }
    .app-tray:not(.app-open).app-size-auto#{$class-extention} >.app:not(.active) > .app-title {
            font-size: 0.8 + (($i - 1) / 10 ) + em;
         }
      .app-tray:not(.app-open).app-size-auto#{$class-extention} >.app:not(.active):not(.app-square).glass:after {
                    border-top-left-radius: $glass-border-radius + px;
                    border-top-right-radius: $glass-border-radius + px;
                }


        .app-tray:not(.app-open).app-size-auto#{$class-extention} >.app:not(.active){ 
    >.app-header.app-icon{
                line-height: $app-size + px;
            }
            >.app-header.app-icon.app-icon {
             font-size: ($app-size * 0.7) + px;
         }
            @each $ce in $class-extension-icon {
             $scale-by: ((index($class-extension-icon, $ce) - 1 ) / 10);
         >.app-header.app-icon.app-icon-#{$ce} {
             font-size: #{$app-size * (0.5 + $scale-by)} + px;
         }
         }
            
        }
    
        @each $space-size in $app-spacing-list {
        $s: index($app-spacing-list, $space-size);
        .app-tray.spacing-#{$s}:not(.app-open).app-size-auto#{$class-extention}{
            padding: ($space-size - 5) + px;
            padding-bottom:  ($space-size - 5) + (2 * $i) + px;
        }
        //looped app-spacing, no app-span
        $length-value : caluclateWidthHeight($app-size, $space-size, null);
         .app-tray:not(.app-open).app-size-auto#{$class-extention}.spacing-#{$s} >.app:not(.active) { 
             width: $length-value + px;
             height: $length-value + px;
             min-width: $length-value + px; 
             min-height: $length-value + px; 
             margin: $space-size + px;
         }
         .app-tray:not(.app-open).app-size-auto#{$class-extention}.spacing-#{$s} >.app:not(.active)>.app-title {
                margin-left: -$space-size + px;
                margin-right: -$space-size + px;
             }
         .app-tray:not(.app-open).app-size-auto#{$class-extention}.spacing-#{$s} >.app:not(.active)>.app-header.app-icon { 
                line-height: $length-value + px;
            }
         
         //looped app-spacing, loop app-span
         @each $app-span in $app-span-list{
             //looped app-spacing, looped app-span
            $length-value : caluclateWidthHeight($app-size, $space-size, $app-span);
            .app-tray:not(.app-open).app-size-auto#{$class-extention}.spacing-#{$s} >.app:not(.active).app-span-#{$app-span} { 
             width: $length-value + px;
             min-width: $length-value + px; 
            }
            .app-tray:not(.app-open).app-size-auto#{$class-extention}.spacing-#{$s} >.app:not(.active).app-height-span-#{$app-span} { 
             height: $length-value + px;
             min-height: $length-value + px; 
            }
            .app-tray:not(.app-open).app-size-auto#{$class-extention}.spacing-#{$s} >.app:not(.active).app-height-span-#{$app-span}> .app-header.app-icon { 
             line-height: $length-value + px;
            }
         }
        
    }
    //loop app-span
@each $app-span in $app-span-list{
     //looped app-span
    $length-value : caluclateWidthHeight($app-size, null, $app-span);
    .app-tray:not(.app-open).app-size-auto#{$class-extention} >.app:not(.active).app-span-#{$app-span} { 
     width: $length-value + px;
     min-width: $length-value + px; 
             
    }
    .app-tray:not(.app-open).app-size-auto#{$class-extention} >.app:not(.active).app-height-span-#{$app-span} { 
     height: $length-value + px;
     min-height: $length-value + px; 
    }
    .app-tray:not(.app-open).app-size-auto#{$class-extention} >.app:not(.active).app-height-span-#{$app-span}>     .app-header.app-icon { 
     line-height: $length-value + px;
    }
}
    }
}
}

$class-extension: "xs" "sm" "md" "lg" "xl" "h6" "h5" "h4" "h3" "h2" "h1";
$base-font-size: 10 12 14 16 20 30 35 40 45 50 60;
$auto-size-scale: 0.5 0.6 0.7 0.8 0.9 1 1.1 1.2;

@each $auto-size in $auto-sizes {
    
    $i: index($auto-sizes, $auto-size);
    
    @media (min-width: $auto-size + px){
        $scale-by: nth($auto-size-scale, $i);
        @each $class-extension-val in $class-extension {
            $e: index($class-extension, $class-extension-val);
            $font-size: nth($base-font-size, $e);
                .fs-auto-#{$class-extension-val} {
                    font-size: ($scale-by * $font-size) + px;   
                }
        }
    }
}
